{"version":3,"sources":["components/Sidebar.js","components/Note.js","components/Notes.js","assets/referenceGuide.js","components/RefSidebar.js","App.js","serviceWorker.js","assets/defaultnotes.js","index.js"],"names":["Sidebar","state","minimized","handleMinimize","_this","setState","contentClass","classNames","this","minimize","react_default","a","createElement","buttons","icon","intent","minimal","className","onClick","props","notes","map","note","i","href","concat","key","title","text","fill","addNote","toggleRef","Component","Note","editMode","handleChange","e","updateNote","target","value","index","handleTitleChange","updateNoteTitle","toggleEdit","handleDelete","deleteNote","content","noteContent","react_textarea_autosize_esm_browser","onChange","react_markdown_default","source","noteTitle","id","Notes","Note_Note","referenceGuide","nav","example","RefSidebar","refPage","handleRefLink","handleTOC","_this2","reference","ref","quickLink","style","marginLeft","fontSize","paddingLeft","App","JSON","parse","window","localStorage","getItem","showRef","notesCpy","Object","toConsumableArray","setItem","stringify","console","log","newNotes","filter","RefSidebar_RefSidebar","Sidebar_Sidebar","Notes_Notes","Boolean","location","hostname","match","savedNotes","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button } from '@blueprintjs/core';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Sidebar extends Component {\r\n  \r\n  state = {\r\n    minimized: false\r\n  }\r\n  \r\n  handleMinimize = () => {\r\n    this.setState({minimized: !this.state.minimized});\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n\r\n    let contentClass = classNames({\r\n      minimized: this.state.minimized\r\n    });\r\n\r\n    let minimize = this.state.minimized ? <Button icon=\"plus\" intent=\"primary\" minimal=\"true\" className=\"sidebar-min\" onClick={this.handleMinimize}/> : <Button icon=\"minus\" intent=\"primary\" minimal=\"true\" className=\"sidebar-min\" onClick={this.handleMinimize}/>\r\n\r\n    return (\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar-title\">\r\n            <h2>Navigation</h2>\r\n            {minimize}\r\n          </div>\r\n          <div className={`sidebar-content ` + contentClass}>\r\n            <div className=\"table-of-contents\">\r\n              <h3>Jump to Note</h3>\r\n              {this.props.notes.map((note, i) => {\r\n  \r\n                return <a href={`#note-${i}`} key={`note-link-${i}`}>{note.title}</a>\r\n              })}\r\n            </div>\r\n            \r\n          </div>\r\n          <div>\r\n            <Button icon=\"add\" text=\"Add a Note\" intent=\"success\" fill=\"false\" onClick={this.props.addNote} />\r\n            <Button icon=\"help\" className=\"ref-btn\" text=\"Show Reference\" intent=\"primary\" fill=\"false\" onClick={this.props.toggleRef} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Textarea from 'react-textarea-autosize';\r\nimport { Button } from '@blueprintjs/core';\r\n\r\nexport default class Note extends Component {\r\n  \r\n  state = {\r\n    editMode: false,\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateNote(e.target.value, this.props.index);\r\n  }\r\n\r\n  handleTitleChange = (e) => {\r\n    this.props.updateNoteTitle(e.target.value, this.props.index);\r\n  }\r\n\r\n  toggleEdit = () => {\r\n    this.setState({ editMode: !this.state.editMode })\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.props.deleteNote(this.props.index);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let { note } = this.props;\r\n    let { content, title } = note;\r\n\r\n    let noteContent = this.state.editMode ? <Textarea onChange={ this.handleChange } value={ content } className=\"note-textarea\"></Textarea> : <div><ReactMarkdown source={content}/></div>;\r\n\r\n    let noteTitle = this.state.editMode ? <Textarea onChange={ this.handleTitleChange } value={ title } className=\"note-titlearea\"/> : <h3>{ title }</h3>\r\n\r\n\r\n    return (\r\n      <div className=\"note\" id={`note-${this.props.index}`}>\r\n        <div className=\"note-title\">\r\n          <Button icon=\"edit\" intent=\"success\" onClick={this.toggleEdit}/>\r\n          {noteTitle}\r\n          <Button icon=\"delete\" intent=\"danger\" onClick={this.handleDelete}/>\r\n        </div>\r\n        <div className=\"note-content\">{noteContent}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Note from './Note.js';\r\n\r\nexport default class Notes extends Component {\r\n  \r\n  render() {\r\n\r\n    let { notes } = this.props;\r\n\r\n    return (\r\n      <div className=\"note-area\">\r\n        { notes.map((note, i) => {\r\n\r\n          return <Note note={note} updateNote={this.props.updateNote} updateNoteTitle={this.props.updateNoteTitle} deleteNote={this.props.deleteNote} index={i} key={`note-${i}`}/>;\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default [{\r\n  nav: 'Headers',\r\n  example: `    # H1\r\n    ## H2\r\n    ### H3\r\n    #### H4\r\n    ##### H5\r\n    ###### H6\r\n    Alt-H1\r\n    ======\r\n    Alt-H2\r\n    ------\r\n  \r\n---\r\n# H1\r\n## H2\r\n### H3\r\n#### H4\r\n##### H5\r\n###### H6\r\nAlt-H1\r\n======\r\nAlt-H2\r\n------`\r\n}, {\r\n  nav: 'Emphasis',\r\n  example: `\r\n    Emphasis, aka italics, with *asterisks* or _underscores_.\r\n\r\n    Strong emphasis, aka bold, with **asterisks** or __underscores__.\r\n\r\n    Combined emphasis with **asterisks and _underscores_**.\r\n\r\n    Strikethrough uses two tildes. ~~Scratch this.~~\r\n\r\n---\r\nEmphasis, aka italics, with *asterisks* or _underscores_.\r\n\r\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\r\n    \r\nCombined emphasis with **asterisks and _underscores_**.\r\n    \r\nStrikethrough uses two tildes. ~~Scratch this.~~\r\n`\r\n}, {\r\n  nav: 'Lists',\r\n  example: `\r\n    Spaces represented by ⋅\r\n    1. First ordered list item\r\n    2. Another item\r\n    ⋅⋅* Unordered sub-list. \r\n    1. Actual numbers don't matter, just that it's a number\r\n    ⋅⋅1. Ordered sub-list\r\n    4. And another item.\r\n  \r\n    * Unordered list can use asterisks\r\n    - Or minuses\r\n    + Or pluses\r\n\r\n---\r\n1. First ordered list item\r\n2. Another item\r\n    * Unordered sub-list. \r\n1. Actual numbers don't matter, just that it's a number\r\n    1. Ordered sub-list\r\n4. And another item.\r\n* Unordered list can use asterisks\r\n- Or minuses\r\n+ Or pluses`\r\n}, {\r\n  nav: 'Links',\r\n  example: `\r\n    [I'm an inline-style link](https://www.google.com)\r\n    \r\n    [I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\r\n    \r\n    [I'm a reference-style link][Arbitrary case-insensitive reference text]\r\n    \r\n    [I'm a relative reference to a repository file](../blob/master/LICENSE)\r\n    \r\n    [You can use numbers for reference-style link definitions][1]\r\n    Or leave it empty and use the [link text itself].\r\n    URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <http://www.example.com> and sometimes example.com (but not on Github, for example).\r\n    \r\n    [arbitrary case-insensitive reference text]: https://www.mozilla.org\r\n    \r\n    [1]: http://slashdot.org\r\n\r\n---\r\n    \r\n[link text itself]: http://www.reddit.com\r\n    \r\n[I'm an inline-style link](https://www.google.com)\r\n\r\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\r\n    \r\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\r\n    \r\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\r\n    \r\n[You can use numbers for reference-style link definitions][1]\r\n    \r\nOr leave it empty and use the[link text itself].\r\n    \r\nURLs and URLs in angle brackets will automatically get turned into links.http://www.example.com or<http://www.example.com>\r\n    \r\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\r\n[1]: http://slashdot.org\r\n[link text itself]: http://www.reddit.com`\r\n}, {\r\n  nav: 'Images',\r\n  example: `\r\n    Here's our logo (hover to see the title text):\r\n\r\n    Inline-style: \r\n    ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\r\n  \r\n    Reference-style: \r\n    ![alt text][logo]\r\n  \r\n    [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\r\n---\r\n\r\nHere's our logo (hover to see the title text):\r\n\r\nInline-style: \r\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\r\n\r\nReference-style: \r\n![alt text][logo]\r\n\r\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"`\r\n}, {\r\n  nav: 'Code',\r\n  example: `\r\n    *Note Syntax Highlighting is not available\r\n\r\n    \\`\\`\\`\r\n    var s = \"JavaScript syntax highlighting\";\r\n    alert(s);\r\n    \\`\\`\\`\r\n\r\n    \\`\\`\\`\r\n    s = \"Python syntax highlighting\"\r\n    print s\r\n    \\`\\`\\`\r\n---\r\n\r\n    var s = \"JavaScript syntax highlighting\";\r\n    alert(s);\r\n\r\n    s = \"Python syntax highlighting\"\r\n    print s\r\n`\r\n}, {\r\n  nav: 'Tables',\r\n  example: `\r\n    *Note Table lines, alignment, and backgrounds are not rendered\r\n    \r\n    Colons can be used to align columns.\r\n\r\n    | Tables        | Are           | Cool  |\r\n    | ------------- |:-------------:| -----:|\r\n    | col 3 is      | right-aligned | $1600 |\r\n    | col 2 is      | centered      |   $12 |\r\n    | zebra stripes | are neat      |    $1 |\r\n  \r\n    There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\r\n  \r\n    Markdown | Less | Pretty\r\n    --- | --- | ---\r\n    *Still* | \\`\\`\\`renders\\`\\`\\` | **nicely**\r\n    1 | 2 | 3\r\n\r\n---\r\nColons can be used to align columns.\r\n\r\n| Tables        | Are           | Cool  |\r\n| ------------- |:-------------:| -----:|\r\n| col 3 is      | right-aligned | $1600 |\r\n| col 2 is      | centered      |   $12 |\r\n| zebra stripes | are neat      |    $1 |\r\n\r\nThere must be at least 3 dashes separating each header cell.\r\nThe outer pipes (|) are optional, and you don't need to make the \r\nraw Markdown line up prettily. You can also use inline Markdown.\r\n\r\nMarkdown | Less | Pretty\r\n--- | --- | ---\r\n*Still* | renders | **nicely**\r\n1 | 2 | 3`\r\n}, {\r\n  nav: 'Blockquotes',\r\n  example: `\r\n    > Blockquotes are very handy in email to emulate reply text.\r\n    > This line is part of the same quote.\r\n  \r\n    Quote break.\r\n  \r\n    > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \r\n---\r\n> Blockquotes are very handy in email to emulate reply text.\r\n> This line is part of the same quote.\r\n\r\nQuote break.\r\n\r\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \r\n`\r\n}, {\r\n  nav: 'Inline HTML',\r\n  example: `\r\n    Sorry, Inline HTML is not currently supported.\r\n`\r\n}, {\r\n  nav: 'Horizontal Rule',\r\n  example: `\r\n    Three or more...\r\n\r\n    ---\r\n  \r\n    Hyphens\r\n  \r\n    ***\r\n  \r\n    Asterisks\r\n  \r\n    ___\r\n\r\n    Underscores\r\n\r\n---\r\n\r\nThree or more...\r\n\r\n---\r\n\r\nHyphens\r\n\r\n***\r\n\r\nAsterisks\r\n\r\n___\r\n\r\nUnderscores\r\n`\r\n}, {\r\n  nav: 'Line Breaks',\r\n  example: `\r\n    Here's a line for us to start with.\r\n\r\n    This line is separated from the one above by two newlines, so it will be a *separate paragraph*.\r\n\r\n    This line is also a separate paragraph, but...\r\n    This line is only separated by a single newline, so it's a separate line in the *same paragraph*.\r\n\r\n---\r\nHere's a line for us to start with.\r\n\r\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\r\n\r\nThis line is also a separate paragraph, but...\r\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\r\n\r\n`\r\n}]","import React, { Component } from 'react'\r\nimport { Button } from '@blueprintjs/core';\r\nimport classNames from 'classnames';\r\nimport reference from  '../assets/referenceGuide';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport default class RefSidebar extends Component {\r\n  \r\n  state = {\r\n    minimized: false,\r\n    refPage: 'toc'\r\n  }\r\n\r\n  handleMinimize = () => {\r\n    this.setState({minimized: !this.state.minimized})\r\n  }\r\n\r\n  handleRefLink = (e) => {\r\n    this.setState({refPage: e.target.value});\r\n  }\r\n\r\n  handleTOC = () => {\r\n    this.setState({refPage: 'toc'});\r\n  }\r\n  \r\n  render() {\r\n\r\n    let contentClass = classNames({\r\n      minimized: this.state.minimized\r\n    });\r\n\r\n    let minimize = this.state.minimized ? <Button icon=\"plus\" intent=\"primary\" minimal=\"true\" className=\"sidebar-min\" onClick={this.handleMinimize}/> : <Button icon=\"minus\" intent=\"primary\" minimal=\"true\" className=\"sidebar-min\" onClick={this.handleMinimize}/>\r\n\r\n    let content = reference.map((ref, index) => {\r\n      return <button onClick={this.handleRefLink} value={index} key={`ref-page-${index}`}>{ref.nav}</button>\r\n    });\r\n\r\n    let returnStyle = {\r\n      marginLeft: '5px',\r\n      fontSize: '1.17em',\r\n\r\n    }\r\n\r\n    let quickLink = this.state.refPage === 'toc' ? <h3>Quick Links</h3> : <button onClick={this.handleTOC} style={returnStyle}>Back to Quick Links</button> \r\n\r\n    if (this.state.refPage !== 'toc') {\r\n      let { refPage } = this.state; \r\n      let example = reference[refPage].example;\r\n\r\n      let style = {\r\n        paddingLeft: '5px',\r\n      }\r\n\r\n      content = <div style={style}><ReactMarkdown source={example} /></div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"ref-sidebar\">\r\n        <div className=\"ref\">\r\n          <div className=\"ref-title\">\r\n            <h2>Reference</h2>\r\n            {minimize}\r\n          </div>\r\n          <div className={\"ref-content \" + contentClass}>\r\n            {quickLink}\r\n            <div className=\"table-of-contents\">\r\n              {content}\r\n            </div>\r\n            <div>\r\n              <p>Reference adapted from Adam Pritchard's <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"__blank\">Markdown Cheatsheet</a>.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport Sidebar from './components/Sidebar.js';\nimport Notes from './components/Notes.js';\nimport RefSidebar from './components/RefSidebar.js';\n\n\nclass App extends Component {\n\n  state = {\n    notes: JSON.parse(window.localStorage.getItem('notes')),\n    showRef: true\n  }\n\n  updateNote = (content, i) => {\n    let notesCpy = [...this.state.notes];\n    notesCpy[i] = {content: content, title: notesCpy[i].title};\n    this.setState({notes: notesCpy});\n    window.localStorage.setItem('notes', JSON.stringify(notesCpy));\n  }\n\n  updateNoteTitle = ( title, i) => {\n    let notesCpy = [...this.state.notes];\n    console.log(title);\n    notesCpy[i] = { title: title, content: notesCpy[i].content };\n    this.setState({notes: notesCpy});\n    window.localStorage.setItem('notes', JSON.stringify(notesCpy));\n  }\n\n  deleteNote = (i) => {\n    let newNotes = this.state.notes.filter((note, index) => i !== index );\n    this.setState({notes: newNotes});\n    window.localStorage.setItem('notes', JSON.stringify(newNotes));\n  }\n\n  addNote = () => {\n    let newNotes = [{title: \"New Note\", content: \"## Add some markdown!\"}, ...this.state.notes];\n    this.setState({notes: newNotes});\n    window.localStorage.setItem('notes', JSON.stringify(newNotes));\n  }\n\n  toggleRef = () => {\n    this.setState({showRef: !this.state.showRef});\n  }\n\n  render () {\n\n    let ref = this.state.showRef ? <RefSidebar /> : <div></div>;\n\n    return (\n      <div className=\"App\">\n        <Sidebar notes={this.state.notes} addNote={this.addNote} toggleRef={this.toggleRef}/>\n        <Notes notes={this.state.notes} deleteNote={this.deleteNote} updateNote={this.updateNote} updateNoteTitle={this.updateNoteTitle} />\n        {ref}\n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default [\r\n  {\r\n    title: 'Tutorial',\r\n    content: `# Tutorial \r\n\r\nNotes can be styled using markdown and will persist through sessions.\r\n\r\nCheck out the **reference list** on the right side if you need to *brush up* on your markdown\r\n\r\nClick the green edit button on the top left of each note to toggle editing mode. \r\n\r\nMost markdown features are supported with the exception of: \r\n    \r\n  * Syntax Highlighting\r\n  * HTML Rendering\r\n\r\nYou can jump to notes using the nav menu on the left side. \r\n\r\nThis tutorial will always return if the note list is empty (*once refreshed*). \r\n\r\n> Here's a link to [my portfolio](https://www.marlocarreon.com \"Marlo's Portfolio\") if you are interested! \r\n\r\n\r\n### Thank you!\r\n\r\n\r\n\r\nThe reference guide was adapted from Adam Pritchard's [Markdown Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet).\r\n\r\n`,\r\n  } \r\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport defaultnotes from './assets/defaultnotes.js';\n\nlet savedNotes = window.localStorage.getItem('notes');\n\nif ( savedNotes === null || savedNotes === \"[]\") {\n  window.localStorage.setItem('notes', JSON.stringify(defaultnotes) );\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}